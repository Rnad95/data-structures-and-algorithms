/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Challenge32;

import Challenge32.btData.BTNode;
import Challenge32.structure.BinaryTree;
import org.junit.jupiter.api.Test;


import java.util.ArrayList;
import java.util.List;

import static Challenge32.RepeatedWord.repeatedWord;
import static Challenge32.TreeIntersection.tree_intersection;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    @Test void test_GetCommonElement(){
        BTNode<String> btNode = new BTNode<>("A");
        btNode.setLeft(new BTNode<>("B"));
        btNode.getLeft().setLeft(new BTNode<>("C"));
        btNode.getLeft().setRight(new BTNode<>("Z"));

        btNode.setRight(new BTNode<>("T"));
        btNode.getRight().setRight(new BTNode<>("D"));
        btNode.getRight().getRight().setRight(new BTNode<>("R"));

        BinaryTree<String> Bt1= new BinaryTree<>(btNode);

        BTNode<String> btNode2 = new BTNode<>("A");
        btNode2.setLeft(new BTNode<>("E"));
        btNode2.getLeft().setLeft(new BTNode<>("D"));
        btNode2.getLeft().setRight(new BTNode<>("Q"));

        btNode2.setRight(new BTNode<>("M"));
        btNode2.getRight().setRight(new BTNode<>("F"));
        btNode2.getRight().getRight().setRight(new BTNode<>("R"));
        BinaryTree<String> Bt2= new BinaryTree<>(btNode2);


        List result = tree_intersection(Bt1,Bt2);
        List expected = new ArrayList();
        expected.add("R");
        expected.add("A");
        expected.add("D");
        assertEquals(expected,result);

    }


}
