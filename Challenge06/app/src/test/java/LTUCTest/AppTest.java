/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package LTUCTest;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
//    Can successfully add a node to the end of the linked list
    @Test void appendBeforeFirstNode(){
//        App classUnderTest = new App();
        linkedList<Integer> list = new linkedList<>();
        list.insert(1);
        list.insert(2);
        list.insert(3);
        list.append(10);
        assertEquals(4, list.length());
    }
    @Test void appendToTheEnd(){
        linkedList<Integer> list = new linkedList<>();
        Node pointer = list.Head;
        list.insert(1);
        list.insert(2);
        list.insert(3);
        list.append(10);
        Integer item = 10;
        while (pointer != null){
            if(pointer.Next == null)
                assertEquals(10, pointer.value);
            pointer =pointer.Next;
        }
    }
    @Test void appendMultipleNodes(){
//        App classUnderTest = new App();
        linkedList<Integer> list = new linkedList<>();
        list.insert(1);
        list.insert(2);
        list.insert(3);
        list.append(10);
        list.append(12);
        int[] arr = {3,2,1,10,12};
        arr.equals(list);
    }
    @Test void appendBeforeFirstMiddle(){
        linkedList<Integer> list = new linkedList<>();
        list.insert(1);
        list.insert(2);
        list.insert(3);
        list.insert(4);
        list.insert(5);
        list.insert(6);
        int[] arr = {6,5,4,7,3,2,1};
        list.insertBefore(3,7);
        arr.equals(list);

    }
    @Test void appendAfterFirstMiddle(){
        linkedList<Integer> list = new linkedList<>();
        list.insert(1);
        list.insert(2);
        list.insert(3);
        list.insert(4);
        list.insert(5);
        list.insert(6);
        int[] arr = {6,5,4,3,7,2,1};
        list.insertAfter(3,7);
        arr.equals(list);

    }

}
